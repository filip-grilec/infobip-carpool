// <auto-generated />
using System;
using Carpool;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carpool.Migrations
{
    [DbContext(typeof(CarpoolContext))]
    [Migration("20210211123337_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11");

            modelBuilder.Entity("Carpool.Data.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LicencePlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Seats")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            CarType = "Wagon",
                            Color = "red",
                            LicencePlate = "ZG 5833-GD",
                            Name = "XC90",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 2,
                            CarType = "Convertible",
                            Color = "plum",
                            LicencePlate = "ZG 7307-JV",
                            Name = "Jetta",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 3,
                            CarType = "Coupe",
                            Color = "grey",
                            LicencePlate = "ZG 5423-HM",
                            Name = "Alpine",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 4,
                            CarType = "Wagon",
                            Color = "olive",
                            LicencePlate = "DA 5832-JD",
                            Name = "Beetle",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 5,
                            CarType = "Wagon",
                            Color = "grey",
                            LicencePlate = "DA 9590-UF",
                            Name = "Grand Cherokee",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 6,
                            CarType = "Cargo Van",
                            Color = "salmon",
                            LicencePlate = "KA 2833-EQ",
                            Name = "Malibu",
                            Seats = 4
                        },
                        new
                        {
                            CarId = 7,
                            CarType = "Convertible",
                            Color = "ivory",
                            LicencePlate = "ST 7364-PN",
                            Name = "Grand Caravan",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 8,
                            CarType = "Cargo Van",
                            Color = "gold",
                            LicencePlate = "DA 6340-PB",
                            Name = "Durango",
                            Seats = 4
                        },
                        new
                        {
                            CarId = 9,
                            CarType = "Minivan",
                            Color = "maroon",
                            LicencePlate = "OS 2157-MR",
                            Name = "Model T",
                            Seats = 5
                        },
                        new
                        {
                            CarId = 10,
                            CarType = "Hatchback",
                            Color = "magenta",
                            LicencePlate = "ST 3938-EO",
                            Name = "Durango",
                            Seats = 5
                        });
                });

            modelBuilder.Entity("Carpool.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasDriverLicence")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeName = "Danijela Šabarić",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeName = "Davor TkalčićDulić",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeName = "Alma Šelja",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeName = "Zdeslava Rauš",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeName = "Lena Valcer",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 6,
                            EmployeeName = "Rajna VesanovićDvornik",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 7,
                            EmployeeName = "Staša Celjak",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 8,
                            EmployeeName = "Miranda Avramoski",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 9,
                            EmployeeName = "Gordana Poplaša",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 10,
                            EmployeeName = "Dorana Maroš",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 11,
                            EmployeeName = "Bruno Macko",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 12,
                            EmployeeName = "Mica Magdika",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 13,
                            EmployeeName = "Ema Kuba",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 14,
                            EmployeeName = "Slavica Rajačić",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 15,
                            EmployeeName = "Dada Lovač",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 16,
                            EmployeeName = "Matko Škorjanec",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 17,
                            EmployeeName = "Dona Šijak",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 18,
                            EmployeeName = "Bela Korpar",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 19,
                            EmployeeName = "Filip Namjestnik",
                            HasDriverLicence = false
                        },
                        new
                        {
                            EmployeeId = 20,
                            EmployeeName = "Slavek ĐuračkiĆosić",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 21,
                            EmployeeName = "Ruža Španić",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 22,
                            EmployeeName = "Branimir Vangelovski",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 23,
                            EmployeeName = "Tončica Vukadin",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 24,
                            EmployeeName = "Ana Trvalovski",
                            HasDriverLicence = true
                        },
                        new
                        {
                            EmployeeId = 25,
                            EmployeeName = "Grga Sprečaković",
                            HasDriverLicence = true
                        });
                });

            modelBuilder.Entity("Carpool.Data.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "Kutina"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "Duga Resa"
                        },
                        new
                        {
                            LocationId = 3,
                            Name = "Slavonski Brod"
                        },
                        new
                        {
                            LocationId = 4,
                            Name = "Donja Stubica"
                        },
                        new
                        {
                            LocationId = 5,
                            Name = "Glina"
                        },
                        new
                        {
                            LocationId = 6,
                            Name = "Daruvar"
                        },
                        new
                        {
                            LocationId = 7,
                            Name = "Opatija"
                        },
                        new
                        {
                            LocationId = 8,
                            Name = "Donja Stubica"
                        },
                        new
                        {
                            LocationId = 9,
                            Name = "Supetar"
                        },
                        new
                        {
                            LocationId = 10,
                            Name = "Vrbovsko"
                        });
                });

            modelBuilder.Entity("Carpool.Data.TravelPlan", b =>
                {
                    b.Property<int>("TravelPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartLocationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("TravelPlanId");

                    b.HasIndex("CarId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("TravelPlans");
                });

            modelBuilder.Entity("Carpool.Data.TravelPlanEmployees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelPlanId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelPlanEmployeesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId", "TravelPlanId");

                    b.HasIndex("TravelPlanId");

                    b.ToTable("TravelPlanEmployees");
                });

            modelBuilder.Entity("Carpool.Data.TravelPlan", b =>
                {
                    b.HasOne("Carpool.Data.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carpool.Data.Location", "EndLocation")
                        .WithMany()
                        .HasForeignKey("EndLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carpool.Data.Location", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Carpool.Data.TravelPlanEmployees", b =>
                {
                    b.HasOne("Carpool.Data.Employee", "Employee")
                        .WithMany("TravelPlanEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carpool.Data.TravelPlan", "TravelPlan")
                        .WithMany("TravelPlanEmployees")
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
